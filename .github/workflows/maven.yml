# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: [https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven&#93;(https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven)

name: Java CI with Maven
on:
  push:
    branches: [ "main", "development" ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: assign NHN secure manager key to application.properties
        shell : bash
        run : |
          echo ${{ secrets.NHN_SECURE_CLIENT_KEY }} >> ./src/main/resources/application.properties
          cat ./src/main/resources/application.properties

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name : Run SonarQube
        run : mvn sonar:sonar -Dsonar.projectKey=github-action -Dsonar.host.url=${{secrets.SONAR_HOST}} -Dsonar.login=${{secrets.SONAR_TOKEN}}

      - name : ready for deploy first server (excute shell script)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: "./ready_server1.sh"

      - name: Sleep for 60 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '60s'

      - name : upload file to server1
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "target/*.jar"
          target: "~/"
          rm: false

      - name : excute service (server1)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: "./startup.sh"

      - name : complete server1 deployment (excute shell script)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: "./ready_server1.sh"


        ### phase 2

      - name : ready for deploy seconds server (excute shell script)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP2 }}
          username: ${{ secrets.SSH_ID2 }}
          key: ${{ secrets.SSH_KEY2 }}
          port: ${{ secrets.SSH_PORT2 }}
          script_stop: true
          script: "./ready_server2.sh"


      - name: Sleep for 60 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '60s'

      - name : upload file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_IP2 }}
          username: ${{ secrets.SSH_ID2 }}
          key: ${{ secrets.SSH_KEY2 }}
          port: ${{ secrets.SSH_PORT2 }}
          source: "target/*.jar"
          target: "~/"
          rm: false

      - name : excute service (server2)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP2 }}
          username: ${{ secrets.SSH_ID2 }}
          key: ${{ secrets.SSH_KEY2 }}
          port: ${{ secrets.SSH_PORT2 }}
          script_stop: true
          script: "./startup.sh"

      - name : complete server2 deployment (excute shell script)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP2 }}
          username: ${{ secrets.SSH_ID2 }}
          key: ${{ secrets.SSH_KEY2 }}
          port: ${{ secrets.SSH_PORT2 }}
          script_stop: true
          script: "./ready_server2.sh"